(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.react = factory());
})(this, (function () { 'use strict';

  var supportSymbol = typeof Symbol === 'function' && Symbol["for"];
  var REACT_ELEMENT_TYPE = supportSymbol
      ? Symbol["for"]('react.element')
      : 0xeac7;

  // 创建ReactElement
  var ReactElement = function (type, key, ref, props) {
      var element = {
          $$typeof: REACT_ELEMENT_TYPE,
          type: type,
          key: key,
          ref: ref,
          props: props,
          __mark: 'custom'
      };
      return element;
  };
  var jsxDEV = function (type, config) {
      var key = null;
      var props = {};
      var ref = null;
      // 遍历config
      // 把遍历到的prop 赋值给props
      for (var prop in config) {
          var val = config[prop];
          // 如果是 key
          // 那么转化成string
          if ('key' === prop && undefined !== val) {
              key = '' + val;
              continue;
          }
          // 如果是ref 直接赋值给ref
          if ('ref' === prop && undefined !== val) {
              ref = val;
              continue;
          }
          if ({}.hasOwnProperty.call(config, prop)) {
              props[prop] = val;
          }
      }
      // 最终返回创建的element
      return ReactElement(type, key, ref, props);
  };

  // React
  var index = {
      version: '0.0.0',
      createElement: jsxDEV
  };

  return index;

}));
